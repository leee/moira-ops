/* $Header: /afs/.athena.mit.edu/astaff/project/moiradev/repository/moira/gen/passwd.dc,v 1.4 1988-07-29 17:21:11 mar Exp $
 *
 * This generates a master /etc/passwd containing all active (status != 0)
 * accounts.
 */

#include <stdio.h>
#include <sms.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/time.h>

extern int errno;
char *ingres_date_and_time();


main(argc, argv)
int argc;
char **argv;
{
    FILE *out = stdout;
    char *outf, outft[64];
    struct stat sb;
##  char login[9], shell[33], fullname[33], oa[17], op[13], hp[17], *filetime;
##  int uid, error, flag;

##  ingres sms

    if (argc == 2) {
	if (stat(argv[1], &sb) == 0) {
	    filetime = ingres_date_and_time(sb.st_mtime);
##	    retrieve (flag = int4(interval("min", tblstats.modtime - filetime)))
##		where tblstats.table = "users"
	    if (flag < 0) {
		fprintf(stderr, "File %s does not need to be rebuilt.\n",
			argv[1]);
		exit(SMS_NO_CHANGE);
	    }
	}
	outf = argv[1];
	sprintf(outft, "%s~", outf);
	if ((out = fopen(outft, "w")) == NULL) {
	    fprintf(stderr, "unable to open %s for output\n", outf);
	    exit(SMS_OCONFIG);
	}
    } else if (argc != 1) {
	fprintf(stderr, "usage: %s [outfile]\n", argv[0]);
	exit(SMS_ARGS);
    } else {
	outf = NULL;
    }

##  set lockmode on users where readlock = nolock

##  range of u is users
##  retrieve (login = u.#login, uid = u.#uid, shell = u.#shell,
##	      fullname = u.#fullname, oa = u.office_addr,
##	      op = u.office_phone, hp = u.home_phone)
##	where u.status = 1 {
	    strtrim(login);
	    strtrim(fullname);
	    strtrim(oa);
	    strtrim(op);
	    strtrim(hp);
	    strtrim(shell);
    	    fprintf(out, "%s:*:%d:101:%s,%s,%s,%s:/mit/%s:%s\n",
		    login, uid, fullname, oa, op, hp, login, shell);
##  }
##  inquire_equel(error = "errorno")
    if (error)  {
	fprintf(out, "Ingres error %d\n", error);
	exit(SMS_INGRES_ERR);
    }

##  exit

    if (fclose(out)) {
	perror("close failed");
	exit(SMS_CCONFIG);
    }
    if (outf)
      fix_file(outf);
    exit(SMS_SUCCESS);
}
