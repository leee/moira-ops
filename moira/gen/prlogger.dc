/* $Header: /afs/.athena.mit.edu/astaff/project/moiradev/repository/moira/gen/prlogger.dc,v 1.3 1992-12-21 17:58:08 mar Exp $
 *
 * This generates a list of active users for the prlogger
 *
 *  (c) Copyright 1990 by the Massachusetts Institute of Technology.
 *  For copying and distribution information, please see the file
 *  <mit-copyright.h>.
 */

#include <mit-copyright.h>
#include <stdio.h>
#include <moira.h>
#include <moira_site.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/time.h>
EXEC SQL INCLUDE sqlca;

extern int errno;
char *whoami = "prlogger.gen";


main(argc, argv)
int argc;
char **argv;
{
    FILE *out = stdout;
    char *outf = NULL, outft[64];
    struct stat sb;
    int flag;
    EXEC SQL BEGIN DECLARE SECTION;
    char login[9], class[9];
    EXEC SQL END DECLARE SECTION;

#ifsql INGRES
    EXEC SQL CONNECT moira;
    EXEC SQL SET LOCKMODE SESSION WHERE LEVEL=TABLE, READLOCK=SHARED;
#endsql
#ifsql INFORMIX
    EXEC SQL DATABASE moira;
#endsql

    if (argc == 2) {
	if (stat(argv[1], &sb) == 0) {
	    if (ModDiff (&flag, "users", sb.st_mtime))
	      exit(MR_DATE);
	    if (flag < 0) {
		fprintf(stderr, "File %s does not need to be rebuilt.\n",
			argv[1]);
		exit(MR_NO_CHANGE);
	    }
	}
	outf = argv[1];
	sprintf(outft, "%s~", outf);
	if ((out = fopen(outft, "w")) == NULL) {
	    fprintf(stderr, "unable to open %s for output\n", outf);
	    exit(MR_OCONFIG);
	}
    } else if (argc != 1) {
	fprintf(stderr, "usage: %s [outfile]\n", argv[0]);
	exit(MR_ARGS);
    } else {
	outf = NULL;
    }

    EXEC SQL WHENEVER SQLERROR GOTO sqlerr;

    EXEC SQL DECLARE x CURSOR FOR 
      SELECT login, type FROM users WHERE status = 1;
    EXEC SQL OPEN x;
    while (1) {
	EXEC SQL FETCH x INTO :login, :class;
	if (sqlca.sqlcode != 0) break;
	strtrim(login);
	strtrim(class);
	fprintf(out, "%s %s\n", login, class);
    }
    EXEC SQL CLOSE x;

#ifsql INGRES
    EXEC SQL DISCONNECT;
#endsql
#ifsql INFORMIX
    EXEC SQL CLOSE DATABASE;
#endsql

    if (fclose(out)) {
	perror("close failed");
	exit(MR_CCONFIG);
    }
    if (outf)
      fix_file(outf);
    exit(MR_SUCCESS);

 sqlerr:
    com_err(whoami, MR_INGRES_ERR, " code %d\n", sqlca.sqlcode);
    critical_alert("DCM", "PrLogger build encountered INGRES ERROR %d",
		   sqlca.sqlcode);
    exit(MR_INGRES_ERR);
}
